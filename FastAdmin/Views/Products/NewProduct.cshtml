 @using FastKala.Application.ViewModels.Products
@model ProductViewModel
@{
    ViewData["Title"] = "افزودن محصول";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<form class="row" method="post" id="addproductform">
    <div class="col-9">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <!--Product Name-->
        <div class="card p-3 my-2">
            <div class="form-group">
                <label asp-for="Product.Name" class="form-label"></label>
                <input asp-for="Product.Name" class="form-control" />
                <span asp-validation-for="Product.Name" class="text-danger"></span>
            </div>
            <div class="form-group mt-2">
                <label asp-for="Product.EnglishName" class="form-label"></label>
                <input asp-for="Product.EnglishName" class="form-control" />
                <span asp-validation-for="Product.EnglishName" class="text-danger"></span>
            </div>
        </div>
        <!--End Of Product Name-->
        <div class="form-group">
            <textarea asp-for="Product.Description" class="tinymce-editor"></textarea>
            <span asp-validation-for="Product.Description" class="text-danger"></span>
        </div>
        <div class="accordion my-2" id="accordionPanelsStayOpenExample">
            <div class="accordion-item">
                <h2 class="accordion-header">
                    <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#product-features" aria-expanded="true" aria-controls="product-features">
                        ویژگی های محصول
                    </button>
                </h2>
                <div id="product-features" class="accordion-collapse collapse">
                    <div class="accordion-body w-50">
                        <div id="features" class="form-group">
                        </div>
                        <input id="addFeatureButton" class="btn btn-primary" type="button" value="افزودن ویژگی" />
                    </div>
                </div>
            </div>
        </div> @* Product Features *@
        <div class="accordion my-2" id="accordionPanelsStayOpenExample">
            <div class="accordion-item">
                <h2 class="accordion-header">
                    <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#product-pros-cons" aria-expanded="true" aria-controls="product-pros-cons">
                        نقاط قوت و ضعف
                    </button>
                </h2>
                <div id="product-pros-cons" class="accordion-collapse collapse">
                    <div class="accordion-body">
                        <div class="row">
                            <div id="product-pros" class="form-group col-6">
                                <label class="form-label">نقاط قوت</label>
                                <div class="input-group mb-2">
                                    <input class="form-control" name="ProductPros[0]" type="text" />
                                    <input id="addProductPros" class="btn btn-primary" type="button" value="+" />
                                </div>
                            </div>
                            <div id="product-cons" class="form-group col-6">
                                <label class="form-label">نقاط ضعف</label>
                                <div class="input-group mb-2">
                                    <input class="form-control" name="ProductCons[0]" type="text" />
                                    <input id="addProductCons" class="btn btn-danger" type="button" value="+" />
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div> @* Product Pros and Cons *@
        <div class="accordion my-2" id="accordionPanelsStayOpenExample">
            <div class="accordion-item">
                <h2 class="accordion-header">
                    <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#product-info" aria-expanded="true" aria-controls="product-info">
                        اطلاعات محصول
                    </button>
                </h2>
                <div id="product-info" class="accordion-collapse collapse">
                    <div class="accordion-body">
                        <div class="d-flex align-self-start">
                            <div class="nav flex-column nav-pills me-3" style="min-width:15%;" id="v-pills-tab" role="tablist" aria-orientation="vertical">
                                <button class="nav-link active" id="v-pills-productInfo-tab" data-bs-toggle="pill" data-bs-target="#v-pills-productInfo" type="button" role="tab" aria-controls="v-pills-productInfo" aria-selected="true">اطلاعات کلی</button>
                                <button class="nav-link" id="v-pills-features-tab" data-bs-toggle="pill" data-bs-target="#v-pills-features" type="button" role="tab" aria-controls="v-pills-features" aria-selected="false">ویژگی های اصلی</button>
                            </div>
                            <div class="tab-content w-100 ms-2" id="v-pills-tabContent">
                                <div class="tab-pane fade show active" id="v-pills-productInfo" role="tabpanel" aria-labelledby="v-pills-productInfo-tab">
                                    <div class="row">
                                        <div class="col-12">
                                            <div class="row">
                                                <div class="col-xxl-3 p-0 col-xl-4 d-flex align-items-center">
                                                    <label class="form-check-label">
                                                        <input id="manage-stock-quantity" class="form-check-input" asp-for="Product.ManageStockQuantity" /> @Html.DisplayNameFor(model => model.Product.ManageStockQuantity)
                                                    </label>
                                                </div>
                                                <div class="col-xl-3 p-0 d-flex align-items-center">
                                                    <label class="form-check-label">
                                                        <input id="manage-sale-quantity" class="form-check-input" asp-for="Product.ManageSaleQuantity" /> @Html.DisplayNameFor(model => model.Product.ManageSaleQuantity)
                                                    </label>
                                                </div>
                                                <div class="col-xxl-6 col-xl-5">
                                                    <label asp-for="Product.Sku" class="form-label"></label>
                                                    <input asp-for="Product.Sku" class="form-control" />
                                                    <span asp-validation-for="Product.Sku" class="text-danger"></span>
                                                </div>
                                            </div>
                                        </div>
                                        <hr class="mt-3" style="color:#a1a1a1;" />
                                        <div class="col-6">
                                            <label asp-for="Product.Price" class="form-label"></label>
                                            <input asp-for="Product.Price" class="form-control" value="" />
                                            <span asp-validation-for="Product.Price" class="text-danger"></span>
                                        </div>
                                        <div class="col-6">
                                            <label asp-for="Product.SalePrice" class="form-label"></label>
                                            <input asp-for="Product.SalePrice" class="form-control" />
                                            <span asp-validation-for="Product.SalePrice" class="text-danger"></span>
                                        </div>
                                        <div class="col-6">
                                            <label asp-for="Product.Weight" class="form-label"></label>
                                            <input asp-for="Product.Weight" class="form-control" />
                                            <span asp-validation-for="Product.Weight" class="text-danger"></span>
                                        </div>
                                        <div id="stock-quantity-input" class="col-6 invisible">
                                            <label asp-for="Product.StockQuantity" class="form-label"></label>
                                            <input asp-for="Product.StockQuantity" class="form-control" />
                                            <span asp-validation-for="Product.StockQuantity" class="text-danger"></span>
                                        </div>
                                        <div id="min-sale-quantity" class="col-6" style="display: none;">
                                            <label asp-for="Product.MinimumSaleQuantity" class="form-label"></label>
                                            <input asp-for="Product.MinimumSaleQuantity" class="form-control" />
                                            <span asp-validation-for="Product.MinimumSaleQuantity" class="text-danger"></span>
                                        </div>
                                        <div id="sale-quantity-step" class="col-6" style="display: none;">
                                            <label asp-for="Product.SaleQuantityStep" class="form-label"></label>
                                            <input asp-for="Product.SaleQuantityStep" class="form-control" />
                                            <span asp-validation-for="Product.SaleQuantityStep" class="text-danger"></span>
                                        </div>
                                    </div>
                                </div> @* اطلاعات کلی *@
                                <div class="tab-pane fade" id="v-pills-features" role="tabpanel" aria-labelledby="v-pills-features-tab">
                                    <div class="row mb-3">
                                        <label class="col-md-3 col-form-label">انتخاب نوع ویژگی :</label>
                                        <div class="col-md-8">
                                            <select class="form-select" aria-label="انتخاب نوع ویژگی" id="select-attribute">
                                                <option></option>
                                                @foreach (var item in Model.ProductAttributes)
                                                {
                                                    <option value="@item.Id">@item.Name</option>
                                                }
                                            </select>
                                        </div>
                                    </div>
                                </div> @* مشخصات محصول *@
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div> @* Product Informations *@
    </div>
    <div class=" col-3 mt-2 h-25">
        <div class="card">
            <div class="card-header">
                وضعیت انتشار محصول
            </div>
            <div class="card-body">
                <h6 class="card-subtitle mb-2 text-muted mb-3">وضعیت محصول : @Model.Product.Status.ToDisplay()</h6>
                <div class="mb-2 d-flex">
                    @if (Model.Product.Status != FastKala.Domain.Enums.ProductStatus.New)
                    {
                        <button class="btn btn-outline-secondary flex-fill me-1">ذخیره پیش نویس</button>
                        <button class="btn btn-outline-danger flex-fill ms-1">حذف</button>
                    }
                    else
                    {
                        <button class="btn btn-outline-secondary flex-fill">ذخیره پیش نویس</button>
                    }
                </div>
                <input type="submit" id="addproductform" value="منتشر کردن" class="btn btn-primary mb-2 d-block w-100" asp-action="NewProduct" asp-controller="Products" />
            </div>
        </div> @*Product Publish*@
        <div class="card">
            <div class="card-header">
                دسته‌بندی محصول
            </div>
            <div class="card-body">
                <input asp-for="Product.MainCategory" type="hidden" />
                <ul class="border border-2 rounded-3 p-3">
                    @foreach (var item in Model.Categories.Where(x => x.ParentId == 0))
                    {
                        <li class="list-group-item mb-1">
                            <input class="form-check-input me-1" type="checkbox" name="categories" value="@item.Id" id="category-@item.Link" onchange="toggleDisplayLink(this)">
                            <label class="form-check-label" for="category-@item.Link">@item.Name</label>
                            <a href="#" class="float-end d-none" id="link-@item.Id" onclick="updateMainCategory(@item.Id)"><small>دسته‌بندی اصلی</small></a>
                            <ul>
                                @foreach (var cat2 in Model.Categories.Where(y => y.ParentId == item.Id))
                                {
                                    <li class="list-group-item mb-1">
                                        <input class="form-check-input me-1" name="categories" type="checkbox" value="@cat2.Id" id="category-@cat2.Link" onchange="toggleDisplayLink(this)">
                                        <label class="form-check-label" for="category-@cat2.Link">@cat2.Name</label>
                                        <a href="#" class="float-end d-none" id="link-@cat2.Id" onclick="updateMainCategory(@cat2.Id)"><small>دسته‌بندی اصلی</small></a>
                                        <ul>
                                            @foreach (var cat3 in Model.Categories.Where(y => y.ParentId == cat2.Id))
                                            {
                                                <li class="list-group-item mb-1">
                                                    <input class="form-check-input me-1" name="categories" type="checkbox" value="@cat3.Id" id="category-@cat3.Link" onchange="toggleDisplayLink(this)">
                                                    <label class="form-check-label" for="category-@cat3.Link">@cat3.Name</label>
                                                    <a href="#" class="float-end d-none" id="link-@cat3.Id" onclick="updateMainCategory(@cat3.Id)"><small>دسته‌بندی اصلی</small></a>
                                                </li>
                                            }
                                        </ul>
                                    </li>
                                }
                            </ul>
                        </li>
                    }
                </ul>
            </div>
        </div> @*Product Categories*@
        <div class="card">
            <div class="card-header">
                برند
                <span class="float-end">
                    <a href="#" class="card-link">
                        افزودن برند جدید
                    </a>
                </span>
            </div>
            <div class="card-body">
                <select class="form-control" asp-for="Product.BrandId">
                    <option value="0" selected>انتخاب برند</option>
                    @foreach (var item in Model.Brands)
                    {
                        <option value="@item.Id">@item.Name</option>
                    }
                </select>
            </div>
        </div> @*Product brand*@
        <div class="card">
            <div class="card-header">
                برچسب ها
                <span class="float-end">
                    <a href="#" class="card-link">
                        افزودن برچسب جدید
                    </a>
                </span>
            </div>
            <div class="card-body">
                <select class="form-control" id="tag-select" multiple></select>
            </div>
        </div> @*Product Tags*@
        <div class="card">
            <div class="card-header">
                تصویر اصلی
            </div>
            <div class="card-body">
                <div class="border rounded-3" style="aspect-ratio : 1 / 1;">
                    <img src="~/img/upload-image-icon.webp" alt="main test" class="w-100"/>
                </div>
            </div>
        </div> @*Product Main Image*@
        <div class="card">
            <div class="card-header">
                گالری محصول
            </div>
            <div class="card-body">
                <div class="row gx-1">
                    <div class="col-4">
                        <div class="border rounded-3 col-12" style="aspect-ratio : 1 / 1;">
                            <img src="~/Uploads/gallery.jpg" alt="gallery test" class="w-100" />
                        </div>
                    </div>
                    <div class="col-4">
                        <div class="border rounded-3 col-12" style="aspect-ratio : 1 / 1;"></div>
                    </div>
                    <div class="col-4">
                        <div class="border rounded-3 col-12" style="aspect-ratio : 1 / 1;"></div>
                    </div>
                </div>
            </div>
        </div> @*Images*@
    </div> @* Side Bar *@
</form>

@section tinymce {
    <script src="~/lib/tinymce/tinymce.min.js"></script>
}

@section Scripts {
    <partial name="~/Views/Shared/_ValidationScriptsPartial.cshtml" />
    <script>
        // Add Product Feature
        function updateFeaturesInputNames() {
            // Select all the input fields within the container
            var inputFields = document.querySelectorAll('.product-feature');

            // Loop through each pair of input fields to update their name attributes
            for (var i = 0; i < inputFields.length; i += 2) {
                inputFields[i].name = 'Product.ProductFeatures[' + (i / 2) + '].TitleName'; // Update the name attribute for TitleName
                inputFields[i + 1].name = 'Product.ProductFeatures[' + (i / 2) + '].Value'; // Update the name attribute for Value
            }
        }

        document.addEventListener('click', function (event) {
            if (event.target && event.target.id == 'removeFeature') {
                // Handle the click event for the remove button
                var removeButton = event.target;
                var parentRow = removeButton.parentElement; // Assuming the remove button is within a row element
                parentRow.remove(); // Remove the corresponding row

                // After removing the row, update the input names
                updateFeaturesInputNames();
            }

            if (event.target && event.target.id === 'addFeatureButton') {
                // Handle the click event for the add button (assuming addFeatureButton is the ID of the add button)
                // Code to add new input fields
                var container = document.getElementById('features'); // Replace with the actual ID of the container element
                var newInputHtml = '<input type="text" class="form-control product-feature" name="Product.ProductFeatures[0].TitleName" placeholder="عنوان"><input type="text" class="form-control product-feature" name="Product.ProductFeatures[0].Value" placeholder="مقدار"><button id="removeFeature" class="btn btn-danger">حذف ویژگی</button>';
                var newRow = document.createElement('div');
                newRow.className = 'input-group mb-2';
                newRow.innerHTML = newInputHtml;
                container.appendChild(newRow);

                // After adding the new input fields, update the input names
                updateFeaturesInputNames();
            }
        });

        let prevBoldedLink;

        function toggleDisplayLink(checkbox) {
            var checkboxValue = checkbox.value;
            var linkId = "link-" + checkboxValue;
            var link = document.getElementById(linkId);

            if (checkbox.checked) {
                link.classList.remove("d-none");
            } else {
                link.classList.add("d-none");
            }
        }

        function updateMainCategory(categoryId) {
            document.getElementById("Product_MainCategory").value = categoryId;

            if (prevBoldedLink) {
                prevBoldedLink.style.fontWeight = 'normal';
            }
            var link = document.getElementById("link-" + categoryId);
            link.style.fontWeight = 'bold';
            link.style.fontSize = '18px';
            prevBoldedLink = link;
        }

        // Function to toggle the visibility of sale quantity inputs
        function toggleSaleQuantityInputs(isVisible) {
            $("#min-sale-quantity, #sale-quantity-step").toggle(isVisible);
        }

        // Function to toggle the visibility of stock quantity input
        function toggleStockQuantityInput(isVisible) {
            $("#stock-quantity-input").toggleClass("invisible", !isVisible);
        }

        // Event listener for the "manage-sale-quantity" checkbox
        $("#manage-sale-quantity").change(function () {
            toggleSaleQuantityInputs(this.checked);
        });

        // Event listener for the "manage-stock-quantity" checkbox
        $("#manage-stock-quantity").change(function () {
            toggleStockQuantityInput(this.checked);
        });

        $(document).ready(function () {

            let productProsIndex = 1;
            let productConsIndex = 1;

            $('#addProductPros').click(function () {
                const newInputField = `<div class="input-group mb-2">
                                                                                                                                            <input class="form-control" name="ProductPros[${productProsIndex}]" type="text" />
                                                                                                                                            <button class="btn btn-primary remove-button" type="button">-</button>
                                                                                                                                        </div>`;
                $('#product-pros').append(newInputField);
                productProsIndex++;
            });

            $('#product-pros').on('click', '.remove-button', function () {
                $(this).parent().remove();
                // Adjust indexes of remaining inputs
                $('#product-pros .input-group').each(function (i) {
                    $(this).find('input[type="text"]').attr('name', `ProductPros[${i}]`);
                });
                productProsIndex--; // Decrement index after removal
            });

            $('#addProductCons').click(function () {
                const newInputField = `<div class="input-group mb-2">
                                                                                                                                            <input class="form-control" name="ProductCons[${productConsIndex}]" type="text" />
                                                                                                                                            <button class="btn btn-danger remove-button" type="button">-</button>
                                                                                                                                        </div>`;
                $('#product-cons').append(newInputField);
                productConsIndex++;
            });

            $('#product-cons').on('click', '.remove-button', function () {
                $(this).parent().remove();
                // Adjust indexes of remaining inputs
                $('#product-cons .input-group').each(function (i) {
                    $(this).find('input[type="text"]').attr('name', `ProductCons[${i}]`);
                });
                productConsIndex--; // Decrement index after removal
            });
        });

        // Get the select element
        var selectElement = document.getElementById('select-attribute'); // Replace 'yourSelectElementId' with the actual id of your select element

        // Add onchange event listener
        selectElement.onchange = function () {
            // Disable the select element
            $("#select-attribute option:selected").attr('disabled', 'disabled');

            // Get the value of the selected option
            var selectedValue = selectElement.value;

            // Create the div element with the alert and select elements
            var divElement = document.createElement('div');
            divElement.className = 'alert alert-secondary alert-dismissible fade show py-2';
            divElement.role = 'alert';
            divElement.id = 'attribute-' + selectedValue;

            var attrName = document.createElement('span');
            attrName.innerHTML = $("#select-attribute option:selected").text();

            var selectElementInsideDiv = document.createElement('select');
            selectElementInsideDiv.className = 'form-select';
            selectElementInsideDiv.setAttribute('aria-label', 'انتخاب ویژگی');
            selectElementInsideDiv.setAttribute('multiple', 'multiple');
            selectElementInsideDiv.id = 'select-attribute-' + selectedValue;

            var closeButton = document.createElement('button');
            closeButton.type = 'button';
            closeButton.className = 'btn-close';
            closeButton.setAttribute('data-bs-dismiss', 'alert');
            closeButton.setAttribute('aria-label', 'Close');

            // Add a click event listener to the close button
            closeButton.onclick = function () {
                // Enable the selected option
                $("#select-attribute option[value='" + selectedValue + "']").prop('disabled', false);
            };

            divElement.appendChild(attrName);
            divElement.appendChild(selectElementInsideDiv);
            divElement.appendChild(closeButton);

            // Add the div element to the document
            document.getElementById('v-pills-features').appendChild(divElement);

            $('#select-attribute-' + selectedValue).select2({
                ajax: {
                    url: "/Products/GetAttributeValues",
                    dataType: 'json',
                    data: function (params) {
                        return {
                            search: params.term,
                            attributeId: selectedValue
                        };
                    },
                    processResults: function (data, params) {

                        params.page = params.page || 1;

                        return {
                            results: data.results,
                            pagination: {
                                more: (params.page * 30) < data.total_count
                            }
                        };
                    },
                    cache: true
                },
                placeholder: 'جستجو ' + $("#select-attribute option:selected").text(),
                templateResult: formatRepo,
                templateSelection: formatRepoSelection,
                language: {
                    inputTooShort: function () {
                        return 'حداقل یک کاراکتر وارد نمایید';
                    },
                    noResults: function () {
                        return "نتیجه ای یافت نشد";
                    }
                }
            });

            selectElement.selectedIndex = 0;

            function formatRepo(repo) {
                if (repo.loading) {
                    return repo.text;
                }

                var divElement = document.createElement('div');
                divElement.className = 'select2-result-attribute-value';
                divElement.innerHTML = repo.name;

                return divElement;
            }

            function formatRepoSelection(repo) {
                return repo.name || repo.text;
            }
        }


        $('#tag-select').select2({
            ajax: {
                url: "/Products/GetTags",
                method: 'Get',
                processResults: function (data, params) {

                    params.page = params.page || 1;

                    return {
                        results: data.productTags,
                        pagination: {
                            more: (params.page * 30) < data.total_count
                        }
                    };
                },
                cache: true
            },
            placeholder: 'جستجو برچسب ها...',
            templateResult: function (repo) {
                if (repo.loading) {
                    return repo.name;
                }

                var divElement = document.createElement('div');
                divElement.className = 'select2-result-tag';
                divElement.innerHTML = repo.name;

                return divElement;
            },
            templateSelection: function (repo) {
                return repo.name || repo.text;
            },
            language: {
                inputTooShort: function () {
                    return 'حداقل یک کاراکتر وارد نمایید';
                },
                noResults: function () {
                    return "نتیجه ای یافت نشد";
                }
            }
        });

        $('#brand-select').select2({
            ajax: {
                url: "/Products/GetBrands",
                method: 'Get',
                processResults: function (data, params) {

                    params.page = params.page || 1;

                    return {
                        results: data.productTags,
                        pagination: {
                            more: (params.page * 30) < data.total_count
                        }
                    };
                },
                cache: true
            },
            placeholder: 'جستجو برند ها...',
            templateResult: function (repo) {
                if (repo.loading) {
                    return repo.name;
                }

                var divElement = document.createElement('div');
                divElement.className = 'select2-result-tag';
                divElement.innerHTML = repo.name;

                return divElement;
            },
            templateSelection: function (repo) {
                return repo.name || repo.text;
            },
            language: {
                inputTooShort: function () {
                    return 'حداقل یک کاراکتر وارد نمایید';
                },
                noResults: function () {
                    return "نتیجه ای یافت نشد";
                }
            }
        });

        $("#addproductform").submit(function (eventObj) {
            const attributeSelects = $('.select2-hidden-accessible').map(function () { return this.id; });
            const checkedCategories = $("input[name='categories']:checked");

            for (var i = 0; i < checkedCategories.length; i++) {
                let checked = checkedCategories[i].value;
                $("<input />").attr("type", "hidden")
                    .attr("name", "Product.Categories[" + i + "].CategoryId")
                    .attr("value", checked)
                    .appendTo("#addproductform");
            }
            for (var i = 0; i < attributeSelects.length; i++) {
                let a = attributeSelects[i].split('-')[0];
                switch (a) {
                    case 'brand':
                        a = "b";
                        break;
                    case 'tag':
                        let tags = $('#' + attributeSelects[i]).select2('data');
                        for (let x = 0; x < tags.length; x++) {
                            $("<input />").attr("type", "hidden")
                                .attr("name", "Product.Tags[" + x + "].TagId")
                                .attr("value", tags[x].id)
                                .appendTo("#addproductform");
                        }
                        break;
                    case 'select':
                        let items = $('#' + attributeSelects[i]).select2('data');
                        for (let x = 0; x < items.length; x++) {
                            $("<input />").attr("type", "hidden")
                                .attr("name", "Product.Attributes[" + x + "].AttributeValueId")
                                .attr("value", items[x].id)
                                .appendTo("#addproductform");
                        }
                        break;
                }
            }
            return true;
        });
    </script>
}